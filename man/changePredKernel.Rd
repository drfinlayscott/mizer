% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MizerParams-class.R
\name{changePredKernel}
\alias{changePredKernel}
\title{Set predation kernel}
\usage{
changePredKernel(params, pred_kernel = NULL)
}
\arguments{
\item{params}{A MizerParams object}

\item{pred_kernel}{Optional. An array (species x predator size x prey size)
that holds the predation coefficient of each predator at size on each prey
size. If not supplied, a default is set as described in section "Setting
predation kernel".}
}
\value{
A MizerParams object
}
\description{
The predation kernel determines the distribution of prey sizes that a
predator feeds on. It is used in \code{\link{getEncounter}} when calculating
the rate at which food is encountered and in \code{\link{getPredRate}} when
calculating the rate at which a prey is predated upon. The predation kernel
can be a function of the predator/prey size ratio or it can be a function of
the predator size and the prey size separately. Both types can be set up with
this function.
}
\section{Setting predation kernel}{

\strong{Kernel dependent on predator to prey size ratio}

If the \code{pred_kernel} argument is not supplied, then this function sets a
predation kernel that depends only on the ratio of predator mass to prey
mass, not on the two masses independently. The shape of that kernel is then
determined by the \code{pred_kernel_type} column in species_params.

The default pred_kernel_type is "lognormal". This will call the function
\code{\link{lognormal_pred_kernel}} to calculate the predation kernel.
An alternative pred_kernel type is "box", implemented by the functions
\code{\link{box_pred_kernel}}. These functions require certain species
parameters in the species_params data frame. For the lognormal kernel these
are \code{beta} and \code{sigma}, for the box kernely they are
\code{ppmr_min} and \code{ppmr_max}. They are explained in the help pages
for the kernel functions. No defaults are set for these parameters. If they
are missing from the species_params data frame then mizer will issue an
error message.

You can use any other string as the type. If for example you choose "my" then
you need to define a function \code{my_pred_kernel} that you can model on the
existing functions like \code{\link{lognormal_pred_kernel}}.

When using a kernel that depends on the predator/prey size ratio only, mizer
does not need to store the entire three dimensional array in the MizerParams
object. Such an array can be very big when there is a large number of size
bins. Instead, mizer only needs to store two two-dimensional arrays that hold
Fourier transforms of the feeding kernel function that allow the encounter
rate and the predation rate to be calculated very efficiently. However, if
you need the full three-dimensional array you can calculate it with the
\code{\link{getPredKernel}} function.

\strong{Kernel dependent on both predator and prey size}

If you want to work with a feeding kernel that depends on predator mass and
prey mass independently, you can specify the full feeding kernel as a
three-dimensional array (predator species x predator size x prey size).
The dimensions are thus (no_sp, no_w, no_w_full). 

You should use this option only if a kernel dependent only on the
predator/prey mass ratio is not appropriate. Using a kernel dependent on
predator/prey mass ratio only allows mizer to use fast Fourier transform
methods to significantly reduce the running time of simulations.

The order of the predator species in \code{pred_kernel} should be the same
as the order in the species params dataframe in the `params` object. If you
supply a named array then the function will check the order and warn if it is
different.
}

\examples{
\dontrun{
## Set up a MizerParams object
data(NS_species_params_gears)
data(inter)
params <- set_multispecies_model(NS_species_params_gears, inter)

## If you change predation kernel parameters after setting up a model, you
# need to call changePredKernel
params@species_params["Cod", "beta"] <- 200
params <- changePredKernel(params)

## You can change to a different predation kernel type
params@species_params$pred_kernel_type <- "box"
params@species_params$ppmr_min <- 2
params@species_params$ppmr_max <- 4
params <- changePredKernel(params)

## If you need a kernel that depends also on prey size you need to define
# it yourself.
pred_kernel <- getPredKernel(params)
pred_kernel["Herring", , ] <- sweep(pred_kernel["Herring", , ], 2, 
                                    params@w_full, "*")
params<- changePredKernel(params, pred_kernel = pred_kernel)
}
}
\seealso{
Other functions for changing parameters: \code{\link{changeBMort}},
  \code{\link{changeFishing}}, \code{\link{changeInitial}},
  \code{\link{changeIntakeMax}},
  \code{\link{changeInteraction}},
  \code{\link{changeMetab}}, \code{\link{changeParams}},
  \code{\link{changePlankton}},
  \code{\link{changeReproduction}},
  \code{\link{changeResourceDynamics}},
  \code{\link{changeResourceEncounter}},
  \code{\link{changeSearchVolume}}
}
\concept{functions for changing parameters}
