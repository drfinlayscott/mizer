% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MizerParams-class.R
\name{setParams}
\alias{setParams}
\title{Set or change model parameters}
\usage{
setParams(params, interaction = NULL, pred_kernel = NULL,
  pred_kernel_type = params@pred_kernel_type, store_kernel = FALSE,
  search_vol = NULL, q = params@q, f0 = params@f0,
  intake_max = NULL, n = params@n, metab = NULL, p = params@p,
  z0pre = 0.6, z0exp = n - 1, psi = NULL, kappa = params@kappa,
  lambda = params@lambda, r_pp = 10, w_pp_cutoff = 10,
  plankton_dynamics = params@plankton_dynamics,
  resource_dynamics = params@resource_dynamics,
  resource_params = params@resource_params, rho = NULL)
}
\arguments{
\item{params}{A \linkS4class{MizerParams} object}

\item{interaction}{Interaction matrix of the species (predator by prey).
Entries should be numbers between 0 and 1. See "Setting interactions"
section below.}

\item{pred_kernel}{Optional. An array (species x predator size x prey size)
that holds the predation coefficient of each predator at size on each prey
size. The dimensions are thus no_sp, no_w, no_w_full.}

\item{pred_kernel_type}{Only used if \code{pred_kernel} is not supplied. A
string or vector of strings that determines which predation kernel function
is used for each species. If not supplied, is taken from species parameter
dataframe if possible, or defaults to "lognormal".}

\item{store_kernel}{Only used if \code{pred_kernel} is not supplied. A
boolean flag that determines whether the full three dimensional predation
kernel array is calculated and stored, even though it is not needed by
mizer. Only useful if you have your own code that relies on this array.
Default is FALSE.}

\item{q}{Exponent of the allometric search volume. Only needed if 
\code{gamma} is not an array.}

\item{f0}{Average feeding level. Used to calculated \code{h} and \code{gamma}
if those are not columns in the species data frame. Also requires
\code{k_vb} (the von Bertalanffy K parameter) to be a column in the species
data frame. If \code{h} and \code{gamma} are supplied then this argument is
ignored. Default is 0.6.}

\item{n}{Scaling exponent of the intake rate.}

\item{metab}{Optional. An array (species x size) holding the metabolic rate
for each species at size. If not supplied, a default is set as described in
the section "Setting metabolic rate".}

\item{p}{Scaling exponent of the standard metabolic rate.}

\item{z0pre}{If \code{z0}, the mortality from other sources, is not a column
in the species data frame, it is calculated as z0pre * w_inf ^ z0exp.
Default value is 0.6.}

\item{z0exp}{If \code{z0}, the mortality from other sources, is not a column
in the species data frame, it is calculated as \code{z0pre * w_inf ^ z0exp}.
Default value is \code{n-1}.}

\item{psi}{Optional. An array (species x size) that holds the allocation to
reproduction for each species at size. If not supplied, a default is set
as described in the section "Setting reproduction".}

\item{kappa}{Carrying capacity of the plankton spectrum.}

\item{lambda}{Exponent of the plankton spectrum.}

\item{r_pp}{Growth rate of the primary productivity. Default is 10 g/year.}

\item{w_pp_cutoff}{The upper cut off size of the plankton spectrum. 
Default is 10 g.}

\item{plankton_dynamics}{Function that determines plankton dynamics by
calculating the plankton spectrum at the next time step from the current
state. The default is \code{"\link{plankton_semichemostat}"}.}

\item{resource_dynamics}{A named list of functions that determine the
dynamics of the unstructured resources by calculating their biomasses at
the next time step from the current state. See
\code{\link{resource_dynamics}} for details. An empty list if the model
does not have unstructured resources.}

\item{resource_params}{A list of parameters needed by the
\code{resource_dynamics} functions. An empty list if no parameters are
needed.}

\item{rho}{Either a 3-dim array (predator species x resource x predator size)
or a 2-dim array (predator species x resource). In the latter case the
size dependence is given by allometry.}
}
\value{
A \linkS4class{MizerParams} object
}
\description{
Passes its arguments to the the setup functions
\itemize{
\item \code{\link{setPredKernel}}
\item \code{\link{setSearchVolume}}
\item \code{\link{setInteraction}}
\item \code{\link{setIntakeMax}}
\item \code{\link{setMetab}}
\item \code{\link{setBMort}}
\item \code{\link{setReproduction}}
\item \code{\link{setPlankton}}
\item \code{\link{setResources}}
\item \code{\link{setResourceEncounter}}
\item \code{\link{setFishing}}
}
}
\section{Setting interactions}{


The species interaction matrix \eqn{\theta_{ij}} is used when calculating the food encounter rate in
\code{\link{getEncounter}} and the predation rate in
\code{\link{getPredRate}}. This function checks that the supplied interaction
matrix is valid and then stores it in the \code{interaction} slot of the params
object before returning that object.

Any dimnames of the interaction matrix argument are ignored by the
constructor. The dimnames of the interaction matrix in the returned
\code{MizerParams} object are taken from the species names in the
\code{species_params} slot. This means that the order of the columns and rows
of the interaction matrix argument should be the same as the species name in
the \code{species_params} slot.
}

\section{Setting predation kernel}{

\subsection{Kernel dependent on predator to prey size ratio}{
If the \code{pred_kernel} argument is not supplied, then this function sets a
predation kernel that depends only on the ratio of predator mass to prey
mass, not on the two masses independently. The shape of that kernel is then
determined by the \code{pred_kernel_type} argument.

The default pred_kernel_type is "lognormal". This will call the function
\code{\link{lognormal_pred_kernel}} to calculate the predation kernel and the
function \code{\link{lognormal_max_ppmr}} to return the maximal predator/prey
mass ratio for each species.

An alternative pred_kernel type is "box", implemented by the functions
\code{\link{box_pred_kernel}} and \code{\link{box_max_ppmr}}.

You can use any other string as the type. If for example you choose "my" then
you need to define a function \code{my_pred_kernel} that you can model on the
existing functions like \code{\link{lognormal_pred_kernel}}. You can also
define a function \code{my_max_ppmr} if you want the smallest plankton size
to be calculated automatically by \code{\link{set_multispecies_model}},
otherwise you need to specify the \code{min_w_pp} argument explicitly.

When using a kernel dependent on the predator/prey size ratio only, mizer
does not need to store the entire three dimensional array in the MizerParams
object. Such an array can be very big when there is a large number of size
bins. Instead mizer only needs to store two two-dimensional arrays that hold
Fourier transforms of the feeding kernel function that allow the encounter
rate and the predation rate to be calculated very efficiently. However mizer
gives you the option of storing the full three-dimensional array anyway by
setting \code{store_kernel = TRUE}. This might be useful if you have code for
analysing the results of a mizer simulation that relies on the full array.
}

\subsection{Kernel dependent on both predator and prey size}{
If you want to work with a feeding kernel that depends on predator mass and
prey mass independently, you can specify the full feeding kernel as a
three-dimensional array (predator species x predator size x prey size).

You should use this option only if a kernel dependent only on the
predator/prey mass ratio is not appropriate. Using a kernel dependent on
predator/prey mass ratio only allows mizer to use fast Fourier transform
methods to significantly reduce the running time of simulations.

The order of the predator species in \code{pred_kernel} should be the same
as the order in the species params dataframe. If you supply a named array
then the function will check the order and warn if it is different.
}
}

\section{Setting search volume}{

The search volume \eqn{\gamma_i(w)} of an individual of species \eqn{i}
and weight \eqn{w} multiplies the predation kernel when
calculating the encounter rate and the predation rate.

If the \code{gamma} argument is not supplied, then it is set to
\deqn{\gamma_i(w) = \gamma_i w^q.} The values of \eqn{gamma_i} are taken from
the \code{gamma} column in the species parameter dataframe. If the \code{gamma}
column is not supplied in the species parameter dataframe, it is calculated
from \code{f0, h, beta, sigma, lambda} and \code{kappa}.
}

\section{Setting maximum intake rate}{

The maximum intake rate \eqn{h_i(w)} of an individual of species \eqn{i} and
weight \eqn{w} determines the feeding level, calculated with
\code{\link{getFeedingLevel}}.

If the \code{h} argument is not supplied, then it is set to \deqn{h_i(w) =
h_i w^n.} The values of \eqn{h_i} are taken from the \code{h} column in the
species parameter dataframe. If the \code{h} column is not supplied in the
species parameter dataframe, it is calculated from \code{f0} and the
\code{k_vb} column, if they are supplied.

If \eqn{h_i} is set to \code{Inf}, fish will consume all encountered food.
}

\section{Setting metabolic rate}{

To be documented
}

\section{Setting background mortality rate}{

Still need to document
}

\section{Setting reproduction}{

If the \code{psi} argument is not supplied,
the proportion is set to the product of a sigmoidal maturity ogive that 
gives the proportion of individuals of a given species and size that are
mature, and a factor that describes how investment into reproduction by mature
individuals scales with size. In formulas:
\deqn{\psi(w) = \left[1+\left(\frac{w}{w_{mat}}\right)^{-U}\right]^{-1}
  \left(\frac{w}{w_{inf}}\right)^{m-n}.}{
  [1+(w/w_mat)^(-U)]^(-1) * (w/w_inf)^(m - n)}
Here \eqn{n} is the scaling exponent of the energy income rate.
The exponent \eqn{m} determines the scaling of the investment into
reproduction for mature individuals. By default it is chosen to be \eqn{m =
1} so that the rate at which energy is invested into reproduction scales
linearly with the size. This default can be overridden by including a column
\code{m} in the species parameter dataframe.

The exponent \eqn{U} determines the steepness of the maturity ogive. By default it is
chosen as \eqn{U = 10}, however this can be overridden by including a 
column \code{w_mat25} in the species parameter dataframe that specifies the weight
at which 25\% of individuals are mature, which sets 
\deqn{U = \frac{\log(3)}{\log(w_{mat} / w_{25})}}{U = log(3)/ log(w_mat / w_25)}
}

\section{Setting plankton dynamics}{

Still need to document
}

\section{Setting resource dynamics}{

Still need to document
}

\section{Setting resource encounter rate}{

The resource encounter rate \eqn{\rho_{id}(w)} determines the rate at which
an individual of species \eqn{i} encounters biomass of resource \eqn{d},
\deqn{\sum_d\rho_{id}(w) B_d,} where \eqn{B_d} is the biomass of the d-th
unstructured resource component. 
See \code{\link{resource_dynamics}} for more details.

If only a two-dimensional array (species x resource) is given for the
\code{rho} argument, then the size dependence is set to a power-law:
\deqn{\rho_{id}(w) = \rho_{id} w^n.}

The ordering of the entries in the array \code{rho} is important. The order
of the species in the first array dimension needs to be the same as that in
the species parameter dataframe. The order of the resources in the second
array dimension must be the same as in the list of resource dynamics. The
third dimension, if given, is the size dimension.
}

\section{Setting fishing}{

Needs to be documented
}

