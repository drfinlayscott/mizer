% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MizerParams-class.R
\name{changeResourceDynamics}
\alias{changeResourceDynamics}
\title{Set resource dynamics}
\usage{
changeResourceDynamics(params, resource_dynamics = NULL,
  resource_params = NULL)
}
\arguments{
\item{params}{A MizerParams object}

\item{resource_dynamics}{A named list of functions that determine the
dynamics of the unstructured resources by calculating their biomasses at
the next time step from the current state. An empty list if the model
does not have unstructured resources.}

\item{resource_params}{A named list of parameters needed by the
\code{resource_dynamics} functions. An empty list if no parameters are
needed.}
}
\value{
A MizerParams object
}
\description{
Set resource dynamics
}
\section{Setting resource dynamics}{

Besides the size-structured planktonic resource, mizer can also model any number
of unstructured resource components. Such unstructured components are
appropriate whenever the predation on these componente is not size based.
Examples include detritus as a resource for detritovores, carrion as a
resource for scavengers, or macroflora on which fish can graze.

During a simulation using \code{\link[=project]{project()}}, the biomasses of the resources are
updated at each time step by calling the functions specified in the
\code{resource_dynamics} list, which has one named entry for each unstructured
resource component. By default a model is set up without unstructured
resource components, so you do not need to provide this list. But if you
do want to use it, you can see an example of how to set up a
\code{resource_dynamics} list in the Examples section of
\code{changeResourceDynamics()}.

Mizer provides two functions that you can use to model resource dynamics:
\code{\link[=detritus_dynamics]{detritus_dynamics()}} and \code{\link[=carrion_dynamics]{carrion_dynamics()}}, but you can easily implement
others by following those templates.
As you can see in the documentation of these functions, their arguments are:
the \code{MizerParams} object \code{params}, the current fish size spectra \code{n}, the
current plankton spectrum \code{n_pp}, the current resource biomasses \code{B} and the
current rates calculated by the \code{\link[=getRates]{getRates()}} function.

The other arguments to the resource dynamics functions are model parameters,
like for example growth rates. These need to be provided in the
\code{resource_params} argument which is a named list. One model parameter that
should always be present in this list is the rate of change due to external
causes. This should be given a name of the form \code{resource_external} where
\code{resource} should be replaced by the name of the resource, see for example
\code{detritus_external} in \code{\link[=detritus_dynamics]{detritus_dynamics()}}.

When writing your own resource dynamics functions, you can choose any names
for your other model parameters, but you must make sure not to use the same
name in the function for another resource component. One way to ensure this
is to prefix all parameter namse with your resource name.

The dynamics for a resource should always have a loss term accounting for
the consumption of the resource. This should always have the form used in the
example function \code{\link[=detritus_dynamics]{detritus_dynamics()}}, in order to be in agreement with the
feeding by consumers that is set with \code{\link{changeResourceEncounter}}.
}

\seealso{
Other functions for changing parameters: \code{\link{changeBMort}},
  \code{\link{changeFishing}}, \code{\link{changeInitial}},
  \code{\link{changeIntakeMax}},
  \code{\link{changeInteraction}},
  \code{\link{changeMetab}}, \code{\link{changeParams}},
  \code{\link{changePlankton}},
  \code{\link{changePredKernel}},
  \code{\link{changeReproduction}},
  \code{\link{changeResourceEncounter}},
  \code{\link{changeSearchVolume}},
  \code{\link{tuneParams}}
}
\concept{functions for changing parameters}
